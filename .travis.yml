os: linux
dist: focal
language: generic
vm: 
  size: [large]
  create:
    name: long_text_im
before_install:
  - sudo apt-get -y install libxml2-dev
addons:
  apt:
    update: true
script:
  - echo $TRAVIS_COMMIT_MESSAGE
  - sleep 100
  - echo "OK"
  - echo "sleep 100"
  - echo "sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100"
  - echo $TRAVIS_COMMIT_MESSAGE
  - echo "OK"
  - echo "sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100sleep 100"
  - echo ${1439479846+4856786023985-25348}
  - echo "sleep 200"
  - echo "sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200sleep 200"
  - echo $TRAVIS_COMMIT_MESSAGE
  - echo "OK"
  - echo "sleep 300"
  - echo "sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300sleep 300"
  - echo ${1439479846+4856786023985-25348*45396876-4867}
  - echo $TRAVIS_COMMIT_MESSAGE
  - echo "OK"
  - echo "slep 400"
  - echo "slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400slep 400"
  - echo ${1439479846+4856786023985-25348*45396876-4867}
  - echo $TRAVIS_COMMIT_MESSAGE
  - echo "OK"
  - echo "sleep 500"
  - echo "sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500sleep 500"
  - echo $TRAVIS_COMMIT_MESSAGE
  - echo "OK"
  - echo ${1439479846+4856786023985-25348*45396876-4867}
  - echo "sleep 600"
  - echo "sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600sleep 600"
  - echo $TRAVIS_COMMIT_MESSAGE
  - echo "OK"
  - echo "sleep 700"
  - echo "sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700sleep 700"
  - echo $TRAVIS_COMMIT_MESSAGE
  - echo ${1439479846+4856786023985-25348*45396876-4867}
  - echo "OK"
  - echo "sleep 800"
  - echo "sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800sleep 800"
  - echo $TRAVIS_COMMIT_MESSAGE
  - echo "OK"
  - sleep 100
  - echo "sleep 900"
  - echo "sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900"
  - echo $TRAVIS_COMMIT_MESSAGE
  - echo "sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900"
  - echo "sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900"
  - echo "sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900"
  - echo "sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900"
  - echo "sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900"
  - echo "sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900"
  - echo "sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900"
  - echo "sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900sleep 900"
  - echo "OK"
  - echo "sleep 1000"
  - echo "sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000sleep 1000"
  - echo $TRAVIS_COMMIT_MESSAGE
  - echo "OK"
  - echo "sleep 1100"
  - echo "sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100sleep 1100"
  - echo $TRAVIS_COMMIT_MESSAGE
  - echo ${1439479846+4856786023985-25348*45396876-4867}
  - sleep 100
  - echo "OK"
  - echo "sleep 1200"
  - echo "sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200sleep 1200"
  - echo "{Yaml is a markup language, like xml. And like xml and json, it is used for data encoding. But it is advertised as more human readable than json.It stands for "Yet Another Markup Language"Yaml is typically used to store settings for apps.Now let's uncover the truth:Some nerd computer scientist showed that yaml is technically not a markup language. I think yaml allows for recursive definitions of data structures or something. But the technical reasoning on why yaml is not a markup language is lost on me.Yaml sits in a broader category: data serialization formatYaml is also uses for a kind of declarative programming.An ok example of this would be Kubernetes object configuration files. You say what pods, loadbalancers and structures you need in YAML, and kubernetes builds it for you, but you don't have to tell it how to build it, just what to build.A sucky example of this is ansible playbooks. If the ansible module exists, then yes you can write your yaml ansible playbooks in a very nice declarative way, but for more complex structures, usually there isn't a builtin ansible module, so you find yourself needing to specify the step by step imperative instructions. This means you are trying to use yaml like a programming language, but yaml is absolutely not a programming language, and it is kinda miserable writing these kind of imperative ansible playbooks.Ideally if you need complex logic, you would make a custom ansible module in python, and then the yaml ansible playbook could just be the declarative programming it was meant to be. There are some other technical reasons I hate ansible but the encouragement to misuse yaml is the biggest one.}"
  - echo "build with 1200 sec sleep finished"
